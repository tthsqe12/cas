@MISC{Harvey08acache-friendly,
    author = {David Harvey},
    title = {A CACHE-FRIENDLY TRUNCATED FFT},
    year = {2008}
}

@article{Frigo2005,
  abstract = {FFTW is an implementation of the discrete Fourier transform (DFT)
	that adapts to the hardware in order to maximize performance. This
	paper shows that such an approach can yield an implementation that
	is competitive with hand-optimized libraries, and describes the software
	structure that makes our current FFTW3 version flexible and adaptive.
	We further discuss a new algorithm for real-data DFTs of prime size,
	a new way of implementing DFTs by means of machine-specific single-instruction,
	multiple-data (SIMD) instructions, and how a special-purpose compiler
	can derive optimized implementations of the discrete cosine and sine
	transforms automatically from a DFT algorithm.},
  added-at = {2013-05-24T13:11:10.000+0200},
  author = {Frigo, M. and Johnson, S.G.},
  biburl = {https://www.bibsonomy.org/bibtex/2744e75c05789f40e27a64bd7d40462df/jpowell},
  doi = {10.1109/JPROC.2004.840301},
  interhash = {2a7eb57d4411770bf20198b33e86b8c1},
  intrahash = {744e75c05789f40e27a64bd7d40462df},
  issn = {0018-9219},
  journal = {Proceedings of the IEEE},
  keywords = {DFT Fourier algorithm;FFTW3 compilers;parallel computing;optimising cosine data design;FFTW3 instruction;multiple instructions;sine libraries; libraries;machine optimized programming;software single specific structure;discrete transform;hand transforms;discrete transforms;mathematics transforms;software version;cosine},
  month = Feb,
  number = 2,
  owner = {jpowell},
  pages = {216 -231},
  timestamp = {2013-05-24T13:11:13.000+0200},
  title = {{T}he {D}esign and {I}mplementation of {FFTW}3},
  volume = 93,
  year = 2005
}
